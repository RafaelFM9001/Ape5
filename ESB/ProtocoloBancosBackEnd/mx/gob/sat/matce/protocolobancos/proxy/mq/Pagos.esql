BROKER SCHEMA mx.gob.sat.matce.protocolobancos.proxy.mq
PATH mx.gob.sat.matce;
DECLARE ns NAMESPACE 'http://impl.webservice.util.web.wspagos.ce.siat.sat.gob.mx/';

/*
*
* Autor: Oscar Daniel Jiménez Gutiérrez - Softtek
* Fecha de creación: Enero 2018 Version: 1.0
*/


CREATE COMPUTE MODULE Pagos_GetDetalleTransaccion
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.XMLValidator.SchemaLocation = SchemaLocation;
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refIn REFERENCE TO InputRoot;		
		CALL InitializeFlowProxyMQ(refEnv, refIn);
		
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		DELETE FIELD OutputRoot.XMLNSC.[1].DetalleTransaccion;
		
		CASE InputRoot.MQMD.SourceQueue
		WHEN 'PB.PAGOS.VALIDARLINEACAPTURA.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'validaLineaCaptura';
		WHEN 'PB.PAGOS.BLOQUEARLINEACAPTURA.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'bloqueoLineaCaptura';
		WHEN 'PB.PAGOS.DOCCOBROLINEACAPTURA.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'cobroDocumentoLineaCaptura';
		WHEN 'PB.PAGOS.CONSULTARSTATUSLINEACAPTURA.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'consultaEstatusLineaCaptura';
		WHEN 'PB.PAGOS.ACTUALIZALC.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'actualizaLC';
		WHEN 'PB.PAGOS.ACTUALIZARPEDIMENTOSIFX.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'actualizarPedimentosIfx';
		WHEN 'PB.PAGOS.CONSULTARLINEACAPTURAIFX.REQ' THEN
			SET OutputLocalEnvironment.Destination.SOAP.Request.Operation = 'consultaLCparaIfx';
		END CASE;
		
		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE Pagos_GenerarRespuestaMQ
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.actor = 'WL';
		IF InputRoot.XMLNSC.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.statusBloqueo = 'false' THEN
			IF InputRoot.XMLNSC.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.estadoDescripcion <> 'Bloqueado por banco' THEN --No anidar IF (considerar statusBloqueo=true)
				THROW USER EXCEPTION MESSAGE(1) VALUES('No fue posible realizar el bloqueo de la línea de captura (false)');
			END IF;
		ELSEIF InputRoot.XMLNSC.*:actualizarPedimentosIfxResponse.estatus = 'false' THEN
			THROW USER EXCEPTION MESSAGE(5) VALUES('No fue posible realizar la actualización en informix (false)');
		ELSEIF EXISTS(InputRoot.XMLNSC.ns:consultaLCparaIfxResponse.consultaInfoIfxResponse.cveBanco[]) AND NOT EXISTS(InputRoot.XMLNSC.ns:consultaLCparaIfxResponse.consultaInfoIfxResponse.cveBanco[]) THEN
			THROW USER EXCEPTION MESSAGE(6) VALUES('La consulta en Informix no contiene información');
		ELSEIF InputRoot.XMLNSC.ns:actualizaLCResponse.actualizaLCResponse.lineasDeCaptura.respuesta = 'false' THEN
			THROW USER EXCEPTION MESSAGE(7) VALUES('No fue posible realizar la actualización de estado LC en informix (false)');
		END IF;
		SET OutputRoot.MQMD = Environment.MQMD;
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		SET OutputRoot.XMLNSC.[1].DetalleTransaccion = Environment.DetalleTransaccion;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.MQMD.ReplyToQ;
		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE Pagos_FaultException
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.actor = 'WL';
		
		CASE InputLocalEnvironment.Destination.SOAP.Request.Operation
		WHEN 'validaLineaCaptura' THEN
			THROW USER EXCEPTION MESSAGE(3) VALUES('Error al validar línea de captura (fault)');
		WHEN 'bloqueoLineaCaptura' THEN
			THROW USER EXCEPTION MESSAGE(2) VALUES('Error al bloquear línea de captura (fault)');
		WHEN 'cobroDocumentoLineaCaptura' THEN
			THROW USER EXCEPTION MESSAGE(4) VALUES('Error al registrar cobro de línea de captura (fault)');
		WHEN 'actualizarPedimentosIfx' THEN
			THROW USER EXCEPTION MESSAGE(8) VALUES('Error al realizar la actualización de LC en informix (fault)');
		WHEN 'actualizaLC' THEN
			THROW USER EXCEPTION MESSAGE(9) VALUES('Error al realizar la actualización de estado de LC en informix (fault)');
		WHEN 'consultaLCparaIfx' THEN
			THROW USER EXCEPTION MESSAGE(10) VALUES('Error al realizar la consulta de LC en informix (fault)');
		END CASE;
		RETURN FALSE;
	END;
END MODULE;