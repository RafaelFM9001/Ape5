BROKER SCHEMA mx.gob.sat.matce

/*
 * Procedimiento que recorre la lista de excepciones recibida y devuelve dos
 * variables con el detalle de la última excepción y otra información 
 *
 * Parámetros:
 *
 * ENTRADA:        REFERENCE refExceptionList - Lista de excepciones
 * SALIDA:         CHARACTER   reason - Motivo principal del error
 * ENTRADA/SALIDA: CHARACTER detail  - Detalle asociado al error, incluye:
 * Nombre del Flujo de mensajes, Nombre de nodo, Parametros de la excepción y
 * estampa de tiempo de la excepción

 * Autor: Oscar Daniel Jiménez Gutiérrez - Softtek
 * Fecha de creación: 17 Enero 2018 Version: 1.0
*/


CREATE PROCEDURE obtenerExcepcion(
INOUT refExceptionList REFERENCE,
INOUT refError REFERENCE,
INOUT env REFERENCE,
IN exceptionPrefix CHARACTER
)
BEGIN
	DECLARE lastException REFERENCE TO refExceptionList.RecoverableException;

	DECLARE countInserts INTEGER;
	DECLARE i INTEGER;
	DECLARE flowDetail CHARACTER;
	--Buscará el último hijo de la lista de excepciones, deberá ser otra excepción
	WHILE lastException.Number IS NOT NULL DO
		IF FIELDNAME(lastException) = 'RecoverableException' THEN
			SET countInserts = CARDINALITY(lastException.Insert[]);
			SET i = 1;
			WHILE i <= countInserts DO
				IF i > 1 THEN
					SET flowDetail = flowDetail || ', ' || lastException.Insert[i].Text;
				ELSE
					SET flowDetail = lastException.Insert[1].Text; --El primer insert no lleva coma (,)
				END IF; 
				SET i = i + 1;
			END WHILE;
		END IF;
		MOVE lastException LASTCHILD;
	END WHILE;
	MOVE lastException PARENT;
	
	--Algunas excepciones generan ramas dentro del exceptionlist diferentes de RecoverableException (Ej: ParserException)
	--por ello es necesario persistir los inserts de RecoverableException
	DECLARE parameters CHARACTER;
	IF FIELDNAME(lastException) <> 'RecoverableException' THEN
		--Iteración para concatenar detalle de excepción
		SET countInserts = CARDINALITY(lastException.Insert[]);
		SET i = 1;
		WHILE i <= countInserts DO
			IF i > 1 THEN
				SET parameters = parameters || ', ' || lastException.Insert[i].Text;
			ELSE
				SET parameters =  lastException.Insert[1].Text; --El primer insert no lleva coma (,)
			END IF; 
			SET i = i + 1;
		END WHILE;
	END IF;
	
	IF lastException.Number = '99' THEN
		SET refError.errorEsquema = true;
	END IF;
	
	DECLARE exceptionNumber CHARACTER;
	SET exceptionNumber = CAST(lastException.Number AS CHARACTER);
	IF LENGTH(exceptionNumber) = 1 THEN
		SET exceptionNumber = '0' || exceptionNumber;
	END IF;
	SET refError.codigoError = exceptionPrefix || exceptionNumber; 
	SET refError.severidad = lastException.Severity;
	SET refError.descripcion = lastException.Text;
	SET refError.detalleServicio = flowDetail;
	SET refError.detalleError = parameters;
	SET refError.actor = COALESCE(env.actor, 'BK');
	SET refError.fecha = CURRENT_TIMESTAMP;
END;