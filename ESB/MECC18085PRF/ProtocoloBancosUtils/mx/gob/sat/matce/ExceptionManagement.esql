BROKER SCHEMA mx.gob.sat.matce

DECLARE exceptionPrefix EXTERNAL CHARACTER '';

/*
* ExceptionManagement
* Propósito: Archivo que grupa los modulos y procedimientos relacionados
* con el manejo de errores y que son comunes
*
* Autor: Oscar Daniel Jiménez Gutiérrez - Softtek
* Fecha de creación: 17 Enero 2018 Version: 1.0
*/

CREATE COMPUTE MODULE ExceptionManagement
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Si el flujo llegó al punto de inicialización que permita obtener información del header MQMD este es
		--utilizado, si no está en las variables de ambiente se buscará en la entrada que corresponde al mensaje original
		IF EXISTS(Environment.MQMD[]) THEN
			SET OutputRoot.MQMD = Environment.MQMD;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.MQMD.ReplyToQ;
		ELSEIF EXISTS(InputRoot.MQMD[]) THEN
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.MQMD.ReplyToQ;
			SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.CorrelId;
			SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.ReplyToQ;
			SET OutputRoot.MQMD.ReplyToQMgr = InputRoot.MQMD.ReplyToQMgr;
		END IF;
		
		--En un escenario donde el mensaje de entrada provocara algún problema que no hubiera permitido obtener información
		--de inicialización (DetalleTransaccion), se deberá intentar obtener esta desde este punto
		DECLARE refEnv REFERENCE TO Environment;
		DECLARE refIn REFERENCE TO InputRoot;
		IF NOT EXISTS(Environment.DetalleTransaccion[]) THEN
			CALL InitializeFlow(refEnv, refIn, '');
		END IF;
			
		--Se invocará un procedimiento para obtener la información más importante de la excepción 
		DECLARE refExceptionList REFERENCE TO InputExceptionList;
		CREATE FIELD OutputRoot.XMLNSC.Error;
		DECLARE refError REFERENCE TO OutputRoot.XMLNSC.Error;
		DECLARE env REFERENCE TO Environment;
		CALL obtenerExcepcion(refExceptionList, refError, env, exceptionPrefix);
		RETURN TRUE;
	END;
END MODULE;