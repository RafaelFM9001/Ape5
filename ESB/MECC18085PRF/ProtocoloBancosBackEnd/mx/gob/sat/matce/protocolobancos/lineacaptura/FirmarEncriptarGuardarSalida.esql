BROKER SCHEMA mx.gob.sat.matce.protocolobancos.lineacaptura

/*
*
* Autor: Oscar Daniel Jiménez Gutiérrez - Softtek
* Fecha de creación: Enero 2018 Version: 1.0
*/

CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MapToEncripcion
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF EXISTS(InputRoot.XMLNSC.Error[]) THEN
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
			PROPAGATE TO TERMINAL 'out4';
			RETURN FALSE;
		END IF;
		SET OutputRoot.XMLNSC.ns8:encriptarXml.(XMLNSC.CDataField)xmlLlano = InputRoot.XMLNSC.ns14:firmarXmlResponse.xmlFirmado;
		SET OutputRoot.XMLNSC.ns8:encriptarXml.DetalleTransaccion = Environment.DetalleTransaccion;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MapToFirmado
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE blobMessage BLOB ASBITSTREAM(InputRoot.XMLNSC, 546, 850 ); --Encoding 546, CCSID 850 (Latin Alphabet)
  		DECLARE cdataMessage CHAR CAST(blobMessage AS CHAR CCSID 850);
 		SET OutputRoot.XMLNSC.ns14:firmarXml.(XMLNSC.CDataField)xmlPlano = cdataMessage;
 		SET OutputRoot.XMLNSC.ns14:firmarXml.DetalleTransaccion = Environment.DetalleTransaccion;
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MakeResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF EXISTS(InputRoot.XMLNSC.Error[]) THEN
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
			PROPAGATE TO TERMINAL 'out4';
		END IF;
		RETURN FALSE;
	END;
END MODULE;


CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MapToGuardado
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF EXISTS(InputRoot.XMLNSC.Error[]) THEN
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
			PROPAGATE TO TERMINAL 'out4';
			RETURN FALSE;
		END IF;
		
		IF EXISTS(Environment.DetalleTransaccion.MQMD_Main[]) THEN
			SET OutputRoot.MQMD = Environment.DetalleTransaccion.MQMD_Main;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagerName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQMgr;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQ;
			
		END IF;
		
		SET OutputRoot.XMLNSC.{Environment.DetalleTransaccion.servicio}.lc = Environment.DetalleTransaccion.lc;
		SET OutputRoot.XMLNSC.{Environment.DetalleTransaccion.servicio}.(XMLNSC.CDataField)response = InputRoot.XMLNSC.ns8:encriptarXmlResponse.xmlEncriptado;
		PROPAGATE TO TERMINAL 'out1';
		
		IF Environment.DetalleTransaccion.numTransaccion <> '0' THEN
			SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.numTransaccion = Environment.DetalleTransaccion.numTransaccion;
			SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.respuesta = COALESCE(Environment.DetalleTransaccion.respuestaTransaccion, 'U');
			SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.(XMLNSC.CDataField)respuestaEncriptacion = InputRoot.XMLNSC.*:encriptarXmlResponse.*:xmlEncriptado;
			SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.DetalleTransaccion = Environment.DetalleTransaccion;
			PROPAGATE;
		END IF;
		RETURN FALSE;
	END;
END MODULE;

CREATE COMPUTE MODULE FirmarEncriptarSalida_MapToSalida
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF EXISTS(InputRoot.XMLNSC.Error[]) THEN
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
			PROPAGATE TO TERMINAL 'out4';
			RETURN FALSE;
		END IF;
		
		IF EXISTS(Environment.DetalleTransaccion.MQMD_Main[]) THEN
			SET OutputRoot.MQMD = Environment.DetalleTransaccion.MQMD_Main;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagerName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQMgr;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQ;
			
		END IF;
		
		SET OutputRoot.XMLNSC.{Environment.DetalleTransaccion.servicio}.lc = Environment.DetalleTransaccion.lc;
		SET OutputRoot.XMLNSC.{Environment.DetalleTransaccion.servicio}.(XMLNSC.CDataField)response = InputRoot.XMLNSC.ns8:encriptarXmlResponse.xmlEncriptado;

		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MapErrorToGuardado
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF EXISTS(Environment.DetalleTransaccion.MQMD_Main[]) THEN
			SET OutputRoot.MQMD = Environment.DetalleTransaccion.MQMD_Main;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagerName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQMgr;
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = Environment.DetalleTransaccion.MQMD_Main.ReplyToQ;
			
		END IF;
		
		SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.numTransaccion = Environment.respuestaTransaccion.numTransaccion;
		SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.respuesta = 'Error';

		DECLARE blobMessage BLOB ASBITSTREAM(InputRoot.XMLNSC, 546, 850 ); --Encoding 546, CCSID 850 (Latin Alphabet)
  		DECLARE cdataMessage CHAR CAST(blobMessage AS CHAR CCSID 850);
		SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.respuestaTransaccion.(XMLNSC.CDataField)respuestaEncriptacion = cdataMessage;
		SET OutputRoot.XMLNSC.ns16:guardaRespuestaTransaccion.DetalleTransaccion = Environment.DetalleTransaccion;
		PROPAGATE TO TERMINAL 'out';
		
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC; --Copia el error
		PROPAGATE TO TERMINAL 'out1';
		
		RETURN FALSE;
	END;
END MODULE;


CREATE COMPUTE MODULE FirmarEncriptarGuardarSalida_MapErrorToFirmado
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE blobMessage BLOB '';
		IF EXISTS(InputRoot.XMLNSC.Error[]) THEN
			SET OutputRoot.XMLNSC.{Environment.DetalleTransaccion.servicio}.response = InputRoot.XMLNSC;
			--SET OutputRoot.XMLNSC.ValidarLineaCaptura.response.Respuesta = ref_MsgValidarLCRes.resultadoValidaLinea;
			SET blobMessage = ASBITSTREAM(OutputRoot.XMLNSC CCSID 850); --Encoding 546, CCSID 850 (Latin Alphabet)
		ELSE
			SET blobMessage = ASBITSTREAM(InputRoot.XMLNSC CCSID 850); --Encoding 546, CCSID 850 (Latin Alphabet)
		END IF;
  		DECLARE cdataMessage CHARACTER CAST(blobMessage AS CHARACTER CCSID 850);

		DELETE FIELD OutputRoot.XMLNSC;  		
 		SET OutputRoot.XMLNSC.ns14:firmarXml.(XMLNSC.CDataField)xmlPlano = cdataMessage;
 		SET OutputRoot.XMLNSC.ns14:firmarXml.DetalleTransaccion = Environment.DetalleTransaccion;
		RETURN TRUE;
	END;
END MODULE;