BROKER SCHEMA mx.gob.sat.matce.protocolobancos.lineacaptura.cobrar

/*
*
* Autor: Oscar Daniel Jiménez Gutiérrez - Softtek
* Fecha de creación: Enero 2018 Version: 1.0
*/


DECLARE ns13 NAMESPACE 'http://impl.webservice.util.web.wspagos.ce.siat.sat.gob.mx/';
DECLARE ns2 NAMESPACE 'http://ws.web.firma.matce.sat.gob.mx/';


CREATE COMPUTE MODULE EvaluateResponses
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE ref_LineaCapturaBloquear REFERENCE TO Environment;
		MOVE ref_LineaCapturaBloquear TO InputRoot.ComIbmAggregateReplyBody.LineaCapturaBloquear.XMLNSC;
		DECLARE ref_FirmaValidar REFERENCE TO Environment;
		MOVE ref_FirmaValidar TO InputRoot.ComIbmAggregateReplyBody.FirmaValidar.XMLNSC;
		
		--Obtener el DetalleTransaccion de alguna rama de las respuestas de agregación
		IF EXISTS(ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.DetalleTransaccion[]) THEN
			SET Environment.DetalleTransaccion = ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.DetalleTransaccion;
		ELSEIF EXISTS(ref_FirmaValidar.*:validateXmlSignResponse.DetalleTransaccion[]) THEN
			SET Environment.DetalleTransaccion = ref_FirmaValidar.*:validateXmlSignResponse.DetalleTransaccion;
		END IF;
		
		--Si no hubo error en la validación de firma ni en el bloqueo de LC debe aplicarse el registro del cobro 
		IF NOT EXISTS(ref_FirmaValidar.Error[]) AND
			NOT EXISTS(ref_LineaCapturaBloquear.Error[]) AND
			(ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.estadoDescripcion = 'Bloqueado por banco' OR
			ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.estadoDescripcion = 'Éxito en el bloqueo')	THEN
			--Si el código de validación es N se procede a registrar el cobro, de lo contrario se lanza excepción
			--IF ref_LineaCapturaValidar.*:validaLineaCapturaResponse.resultadoValidaLinea.codigoValidacion = 'N' THEN --N = LC Bloqueda
			--IF ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.statusBloqueo = 'false' AND ref_LineaCapturaBloquear.*:bloqueoLineaCapturaResponse.resultadoBloqueoLinea.descripcion ='Bloqueado por banco' THEN
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.DetalleTransaccion = Environment.DetalleTransaccion;
				--SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.certificadoFechaEmision = Environment.DetalleTransaccion.CobroDocumento.certificadoFechaEmision;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.cveBanco = Environment.DetalleTransaccion.CobroDocumento.cveBanco;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.lc = Environment.DetalleTransaccion.lc;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.nOperacionBanco = Environment.DetalleTransaccion.CobroDocumento.nOperacionBanco;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.canalPago = Environment.DetalleTransaccion.CobroDocumento.canalPago;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.medioCobro = Environment.DetalleTransaccion.CobroDocumento.medioCobro;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.fechaHoraEnvio = Environment.DetalleTransaccion.CobroDocumento.fechaHoraCobro;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.tipoEfectivo = Environment.DetalleTransaccion.CobroDocumento.tipoEfectivo;
				SET OutputRoot.XMLNSC.ns13:cobroDocumentoLineaCaptura.cobroDocumento.codigoValidacion = Environment.DetalleTransaccion.CobroDocumento.codigoValidacion;
				RETURN TRUE;
			--ELSEIF
				--SET Environment.DetalleTransaccion.respuestaTransaccion = 'U';
				--THROW USER EXCEPTION MESSAGE(4) VALUES('Se requiere línea de captura bloqueada');
			--END IF;
		END IF;
		
		--Si hubo error en la firma se debe indicar dicho error
		IF EXISTS(ref_FirmaValidar.Error[]) THEN
			SET OutputRoot.XMLNSC.Error = ref_FirmaValidar.Error;
			PROPAGATE TO TERMINAL 'out4';
			RETURN FALSE; --Pueden presentarse dos errores diferentes por ello el flujo debe terminar al encontrar el primero
		END IF;
		
		--Si hubo error en la validación de LC
		IF EXISTS(ref_LineaCapturaBloquear.Error[]) THEN
			SET OutputRoot.XMLNSC.Error = ref_LineaCapturaBloquear.Error;
			PROPAGATE TO TERMINAL 'out4';
			RETURN FALSE; --Pueden presentarse dos errores diferentes por ello el flujo debe terminar al encontrar el primero
		END IF;
		
		RETURN FALSE;
	END;
END MODULE;
